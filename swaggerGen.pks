create or replace PACKAGE swaggerGen authid current_user
AS

   /**
   * swaggerGen
   * Generated by: Oscar Salvador Magallanes
   * Website: github.com/osalvador/OsalvadorCodeGenerators
   * Version: 0.1
   */

   --Global public data structures
   SUBTYPE dbo_name_t IS VARCHAR2 (30); -- Max size for a DB object name

   TYPE dbo_name_aat IS TABLE OF dbo_name_t;

    TYPE column_rt
    IS
      RECORD (
         table_name        user_tab_columns.table_name%TYPE
       , column_name       user_tab_columns.column_name%TYPE
       , db_column_name    user_tab_columns.column_name%TYPE
       , nullable          user_tab_columns.nullable%TYPE
       , constraint_type   user_constraints.constraint_type%TYPE
       , data_type         user_tab_columns.data_type%TYPE
       , data_format       VARCHAR2(3000)
      );

   --Collection types (record)
   TYPE column_tt IS TABLE OF column_rt;

   TYPE constraint_tt IS TABLE OF user_constraints%ROWTYPE;

   /**
   * Create PL/SQL Table API
   *
   * @param     p_table_name              must be NOT NULL
   * @param     p_unique_key              If the table has no primary key, it indicates the column that will be used as a unique key
   */
   FUNCTION create_swagger   ( p_table_name               IN VARCHAR2                                
                             , p_unique_key               IN VARCHAR2 DEFAULT NULL
                             , p_template                 IN VARCHAR2 DEFAULT 'swagger')
      RETURN CLOB;

   --Public functions but for internal use.
   FUNCTION get_all_columns (p_tab_name VARCHAR2)
      RETURN column_tt;

   FUNCTION get_pk_columns (p_tab_name VARCHAR2, p_unque_key VARCHAR2 DEFAULT NULL)
      RETURN column_tt;

   FUNCTION get_non_pk_columns (p_tab_name VARCHAR2, p_unque_key VARCHAR2 DEFAULT NULL)
      RETURN column_tt;

   FUNCTION to_camel_case (p_stirng VARCHAR2)
      RETURN VARCHAR2;

    FUNCTION to_swagger_type (p_data_type VARCHAR2)
        RETURN VARCHAR2;

    FUNCTION to_swagger_format (p_data_type VARCHAR2)
        RETURN VARCHAR2;

    FUNCTION upper_first (p_string VARCHAR2)
        RETURN VARCHAR2;


END swaggerGen;